import Axios, { AxiosRequestConfig } from "axios";

import { API_URL } from "../config";
import { toast } from "react-toastify";
import storage from "../utils/storage";

function authRequestInterceptor(config: AxiosRequestConfig) {
  const token = storage.getToken();

  if (!config.headers) {
    config.headers = {};
  }

  if (token) {
    config.headers.authorization = `Bearer ${token}`;
  }

  config.headers.Accept = "application/json";
  return config;
}

export const axios = Axios.create({
  baseURL: API_URL,
});

axios.interceptors.request.use(authRequestInterceptor);
axios.interceptors.response.use(
  (response) => {
    return response.data;
  },
  (error) => {
    if (error.response.status === 401) {
      storage.clearToken();
      window.location.assign(window.location.origin as unknown as string);
    }
    const message = error.response?.data?.message || error.message;
    toast.error(message);
    return Promise.reject(error);
  }
);
